# USAGE
# python detect_color.py --image pokemon_games.png

# import the necessary packages
import numpy as np
import cv2

# construct the argument parse and parse the arguments
#ap = argparse.ArgumentParser()
#ap.add_argument("-i", "--image", help = "path to the image")
#args = vars(ap.parse_args())

# load the image
image = cv2.imread('opencv_frame.png')
#image = cv2.imread('pokemon_games.png') 
#image= cv2.VideoCapture(0)
# define the list of boundaries

hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)

boundaries = [
	([81, 47, 0], [135, 150, 255]),  #blue
   ([173, 94, 147], [179, 218, 255]),  #red
	([22  , 94, 0], [28, 255, 255 ]), #yellow
    ([158, 40, 0], [168, 255, 255]),# purple
    ([48, 52, 58], [99, 197, 255])# green
    ]
# loop over the boundaries
for (lower, upper) in boundaries:
    # create NumPy arrays from the boundaries
    lower = np.array(lower, dtype = "uint8")
    upper = np.array(upper, dtype = "uint8")
    
    print(upper)
    print(lower)
       
    # find the colors within the specified boundaries and apply
    # the mask
    
    mask = cv2.inRange(hsv, lower, upper)
    output = cv2.bitwise_and(image, image, mask = mask)
    
    # show the images
    cv2.imshow("images", np.hstack([image, output]))
    cv2.waitKey(0)
    
    
